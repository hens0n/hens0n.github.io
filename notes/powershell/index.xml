<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Powershell Notes on Jacob Henson</title><link>https://cyberphilia.github.io/notes/powershell/</link><description>Recent content in Powershell Notes on Jacob Henson</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 17 May 2022 15:03:53 -0500</lastBuildDate><atom:link href="https://cyberphilia.github.io/notes/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>Sharepoint</title><link>https://cyberphilia.github.io/notes/powershell/sharepoint/</link><pubDate>Tue, 17 May 2022 15:03:53 -0500</pubDate><guid>https://cyberphilia.github.io/notes/powershell/sharepoint/</guid><description>Get List Items function Get-ListItems{ param( [srtring]$sharepointSite, [srtring]$listTitle, [srtring]$selectedFields ) $itemArry =@() $pageSize = 5000 $pageId = 0 $header = @{&amp;#39;Accept&amp;#39; = &amp;#39;application/json; odata=verbose&amp;#39;} if ($selectedFields.Length -gt 0){ $selectStatement = &amp;#34;&amp;amp;`$SELECT=$($selectedFields)&amp;#34; } while ($pageId){ $uri = &amp;#34;$($sharepointSite)/_api/Web/Lists/GetByTitle(&amp;#39;$($listTitle)&amp;#39;)/Items?`$skiptoken=Paged=True%26p_ID=$($pageId)&amp;amp;`$top=$($pageSize)$($selectStatement)&amp;#34; #Get list Get-ListItems $response = Invoke-RestMethod -Method Get -Uri $uri -Headers $header -UseDefaultCredentials:$true $data = $response.ToString().Replace(&amp;#34;&amp;#34;&amp;#34;ID&amp;#34;&amp;#34;&amp;#34;,&amp;#34;_ID&amp;#34;) | ConvertFrom-Json if($data.d.results.Count -gt 0){ #Add to the Array $itemsArray += $data.d.results #Get last id in the results set for next starting sharepointSite $pageId = $data.</description></item><item><title>Powershell</title><link>https://cyberphilia.github.io/notes/powershell/general/</link><pubDate>Tue, 17 May 2022 15:02:44 -0500</pubDate><guid>https://cyberphilia.github.io/notes/powershell/general/</guid><description> Start Powershell powershell.exe -nop -exec bypass</description></item></channel></rss>