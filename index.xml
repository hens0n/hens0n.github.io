<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jacob Henson</title><link>https://hens0n.github.io/</link><description>Recent content on Jacob Henson</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 20 May 2023 15:00:00 +0000</lastBuildDate><atom:link href="https://hens0n.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>httpjson</title><link>https://hens0n.github.io/notes/logstash/httpjson/</link><pubDate>Sat, 20 May 2023 15:00:00 +0000</pubDate><guid>https://hens0n.github.io/notes/logstash/httpjson/</guid><description>Filebeat httpjson Filebeat httpjson example config for Proofpoint Isolation API
filebeat.inputs: - type: httpjson interval: &amp;#34;1h&amp;#34; request.url: https://proofpointisolation.com/api/v2/reporting/useage-data/ request.method: GET request.transforms: - set: target: url.params.to value: &amp;#39;[[formatDate (now)]]&amp;#39; - set: target: url.params.from value: &amp;#39;[[ formatDate (now (parseDuration &amp;#34;-1h&amp;#34;)) ]]&amp;#39; - set: target: url.params.key value: &amp;#39;your_api_key&amp;#39; - set: target: url.params.pageSize value: &amp;#39;100&amp;#39; response.split: target: body.data type: array keep_parent: false response.pagination: - set: target: url.value value: &amp;#39;[[ .last_response.url.value]]&amp;#39; - set: target: url.</description></item><item><title>Ingest Pipeline</title><link>https://hens0n.github.io/notes/elasticsearch/ingest_pipeline/</link><pubDate>Fri, 09 Sep 2022 15:02:44 -0500</pubDate><guid>https://hens0n.github.io/notes/elasticsearch/ingest_pipeline/</guid><description> Script Processor: Lowercase ArrayList of MapHashes Lowercase keys of MapHash in a ArrayList
if(ctx.field_name != null){ ArrayList lower_array = new ArrayList(); for (item in ctx.field_name){ ArrayList temp = new ArrayList(); for(map_entry in item.entrySet()){ temp.add([map_entry.getKey().toLowerCase():map_entry.getValue()]) } lower_array.add(temp); } ctx.field_name = lower_array; }</description></item><item><title>1970 Trans Am</title><link>https://hens0n.github.io/posts/1970-trans-am/</link><pubDate>Mon, 23 May 2022 10:13:49 -0500</pubDate><guid>https://hens0n.github.io/posts/1970-trans-am/</guid><description>Tear down Build Clean</description></item><item><title>Sharepoint</title><link>https://hens0n.github.io/notes/powershell/sharepoint/</link><pubDate>Tue, 17 May 2022 15:03:53 -0500</pubDate><guid>https://hens0n.github.io/notes/powershell/sharepoint/</guid><description>Get List Items function Get-ListItems{ param( [srtring]$sharepointSite, [srtring]$listTitle, [srtring]$selectedFields ) $itemArry =@() $pageSize = 5000 $pageId = 0 $header = @{&amp;#39;Accept&amp;#39; = &amp;#39;application/json; odata=verbose&amp;#39;} if ($selectedFields.Length -gt 0){ $selectStatement = &amp;#34;&amp;amp;`$SELECT=$($selectedFields)&amp;#34; } while ($pageId){ $uri = &amp;#34;$($sharepointSite)/_api/Web/Lists/GetByTitle(&amp;#39;$($listTitle)&amp;#39;)/Items?`$skiptoken=Paged=True%26p_ID=$($pageId)&amp;amp;`$top=$($pageSize)$($selectStatement)&amp;#34; #Get list Get-ListItems $response = Invoke-RestMethod -Method Get -Uri $uri -Headers $header -UseDefaultCredentials:$true $data = $response.ToString().Replace(&amp;#34;&amp;#34;&amp;#34;ID&amp;#34;&amp;#34;&amp;#34;,&amp;#34;_ID&amp;#34;) | ConvertFrom-Json if($data.d.results.Count -gt 0){ #Add to the Array $itemsArray += $data.d.results #Get last id in the results set for next starting sharepointSite $pageId = $data.</description></item><item><title>Powershell</title><link>https://hens0n.github.io/notes/powershell/general/</link><pubDate>Tue, 17 May 2022 15:02:44 -0500</pubDate><guid>https://hens0n.github.io/notes/powershell/general/</guid><description> Start Powershell powershell.exe -nop -exec bypass</description></item></channel></rss>