[{"categories":null,"contents":" Filebeat httpjson Filebeat httpjson example config for Proofpoint Isolation API\nfilebeat.inputs: - type: httpjson interval: \u0026#34;1h\u0026#34; request.url: https://proofpointisolation.com/api/v2/reporting/useage-data/ request.method: GET request.transforms: - set: target: url.params.to value: \u0026#39;[[formatDate (now)]]\u0026#39; - set: target: url.params.from value: \u0026#39;[[ formatDate (now (parseDuration \u0026#34;-1h\u0026#34;)) ]]\u0026#39; - set: target: url.params.key value: \u0026#39;your_api_key\u0026#39; - set: target: url.params.pageSize value: \u0026#39;100\u0026#39; response.split: target: body.data type: array keep_parent: false response.pagination: - set: target: url.value value: \u0026#39;[[ .last_response.url.value]]\u0026#39; - set: target: url.params.jobId value: \u0026#39;[[.last_response.body.jobId]]\u0026#39; fail_on_template_error: true - set: target: url.params.pageToken value: \u0026#39;[[.last_response.body.pageToken]]\u0026#39; fail_on_template_error: true processors: - decode_json_fields: fields: [\u0026#34;message\u0026#34;] target: \u0026#34;json\u0026#34; output.console: pretty: true ","date":"May 20, 2023","hero":"/images/default-hero.jpg","permalink":"https://hens0n.github.io/notes/logstash/httpjson/","summary":"Filebeat httpjson Filebeat httpjson example config for Proofpoint Isolation API\nfilebeat.inputs: - type: httpjson interval: \u0026#34;1h\u0026#34; request.url: https://proofpointisolation.com/api/v2/reporting/useage-data/ request.method: GET request.transforms: - set: target: url.params.to value: \u0026#39;[[formatDate (now)]]\u0026#39; - set: target: url.params.from value: \u0026#39;[[ formatDate (now (parseDuration \u0026#34;-1h\u0026#34;)) ]]\u0026#39; - set: target: url.params.key value: \u0026#39;your_api_key\u0026#39; - set: target: url.params.pageSize value: \u0026#39;100\u0026#39; response.split: target: body.data type: array keep_parent: false response.pagination: - set: target: url.value value: \u0026#39;[[ .last_response.url.value]]\u0026#39; - set: target: url.","tags":null,"title":"httpjson"},{"categories":null,"contents":" Script Processor: Lowercase ArrayList of MapHashes Lowercase keys of MapHash in a ArrayList\nif(ctx.field_name != null){ ArrayList lower_array = new ArrayList(); for (item in ctx.field_name){ ArrayList temp = new ArrayList(); for(map_entry in item.entrySet()){ temp.add([map_entry.getKey().toLowerCase():map_entry.getValue()]) } lower_array.add(temp); } ctx.field_name = lower_array; } ","date":"September 9, 2022","hero":"/images/default-hero.jpg","permalink":"https://hens0n.github.io/notes/elasticsearch/ingest_pipeline/","summary":" Script Processor: Lowercase ArrayList of MapHashes Lowercase keys of MapHash in a ArrayList\nif(ctx.field_name != null){ ArrayList lower_array = new ArrayList(); for (item in ctx.field_name){ ArrayList temp = new ArrayList(); for(map_entry in item.entrySet()){ temp.add([map_entry.getKey().toLowerCase():map_entry.getValue()]) } lower_array.add(temp); } ctx.field_name = lower_array; } ","tags":null,"title":"Ingest Pipeline"},{"categories":null,"contents":" Get List Items function Get-ListItems{ param( [srtring]$sharepointSite, [srtring]$listTitle, [srtring]$selectedFields ) $itemArry =@() $pageSize = 5000 $pageId = 0 $header = @{\u0026#39;Accept\u0026#39; = \u0026#39;application/json; odata=verbose\u0026#39;} if ($selectedFields.Length -gt 0){ $selectStatement = \u0026#34;\u0026amp;`$SELECT=$($selectedFields)\u0026#34; } while ($pageId){ $uri = \u0026#34;$($sharepointSite)/_api/Web/Lists/GetByTitle(\u0026#39;$($listTitle)\u0026#39;)/Items?`$skiptoken=Paged=True%26p_ID=$($pageId)\u0026amp;`$top=$($pageSize)$($selectStatement)\u0026#34; #Get list Get-ListItems $response = Invoke-RestMethod -Method Get -Uri $uri -Headers $header -UseDefaultCredentials:$true $data = $response.ToString().Replace(\u0026#34;\u0026#34;\u0026#34;ID\u0026#34;\u0026#34;\u0026#34;,\u0026#34;_ID\u0026#34;) | ConvertFrom-Json if($data.d.results.Count -gt 0){ #Add to the Array $itemsArray += $data.d.results #Get last id in the results set for next starting sharepointSite $pageId = $data.d.results[-1].id } else{ $pageId =-1 } } return $itemArry } ","date":"May 17, 2022","hero":"/images/default-hero.jpg","permalink":"https://hens0n.github.io/notes/powershell/sharepoint/","summary":"Get List Items function Get-ListItems{ param( [srtring]$sharepointSite, [srtring]$listTitle, [srtring]$selectedFields ) $itemArry =@() $pageSize = 5000 $pageId = 0 $header = @{\u0026#39;Accept\u0026#39; = \u0026#39;application/json; odata=verbose\u0026#39;} if ($selectedFields.Length -gt 0){ $selectStatement = \u0026#34;\u0026amp;`$SELECT=$($selectedFields)\u0026#34; } while ($pageId){ $uri = \u0026#34;$($sharepointSite)/_api/Web/Lists/GetByTitle(\u0026#39;$($listTitle)\u0026#39;)/Items?`$skiptoken=Paged=True%26p_ID=$($pageId)\u0026amp;`$top=$($pageSize)$($selectStatement)\u0026#34; #Get list Get-ListItems $response = Invoke-RestMethod -Method Get -Uri $uri -Headers $header -UseDefaultCredentials:$true $data = $response.ToString().Replace(\u0026#34;\u0026#34;\u0026#34;ID\u0026#34;\u0026#34;\u0026#34;,\u0026#34;_ID\u0026#34;) | ConvertFrom-Json if($data.d.results.Count -gt 0){ #Add to the Array $itemsArray += $data.d.results #Get last id in the results set for next starting sharepointSite $pageId = $data.","tags":null,"title":"Sharepoint"},{"categories":null,"contents":" Start Powershell powershell.exe -nop -exec bypass ","date":"May 17, 2022","hero":"/images/default-hero.jpg","permalink":"https://hens0n.github.io/notes/powershell/general/","summary":" Start Powershell powershell.exe -nop -exec bypass ","tags":null,"title":"Powershell"},{"categories":null,"contents":"Tear down Build Clean ","date":"May 23, 2022","hero":"/posts/1970-trans-am/IMG_6915.JPG","permalink":"https://hens0n.github.io/posts/1970-trans-am/","summary":"Tear down Build Clean ","tags":null,"title":"1970 Trans Am"}]